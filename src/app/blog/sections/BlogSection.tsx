import Markdown from "react-markdown";
import rehypeRaw from "rehype-raw";
import remarkGfm from "remark-gfm";
export interface ArticleType {
  readTime: Number;
  uploadTime: Date;
  title: string;
  body: string;
}
export default function BlogSection() {
  return (
    <div className="bg-white rounded-tl-2xl rounded-tr-2xl max-w-5xl p-4 mx-auto">
      {articles
        .sort((a, b) => b.uploadTime.getTime() - a.uploadTime.getTime())
        .map((article, index) => {
          return (
            <article className={"text-grey break-words"} key={index}>
              <header>
                <div className="font-epilogue text-light-grey text-sm mb-1">
                  {getTimeAgo(article.uploadTime)} &middot;{" "}
                  {article.readTime.toString()} minutes read
                </div>
                <h1 className="text-2xl font-semibold">{article.title}</h1>
              </header>

              <section>
                <Markdown
                  rehypePlugins={[rehypeRaw]}
                  remarkPlugins={[remarkGfm]}
                  className="font-epilogue text-base">
                  {article.body.replace(/\n/gi, "\n").replace(/\n/gi, "<br/>")}
                </Markdown>
              </section>

              {index !== articles.length - 1 && (
                <hr className="bg-light-grey h-[2px] mx-auto w-11/12 rounded-lg my-6"></hr>
              )}
            </article>
          );
        })}
    </div>
  );
}

function getTimeAgo(date: Date) {
  const currentDate = new Date();
  const timeDifference = currentDate.getTime() - date.getTime();

  const minutesAgo = Math.floor(timeDifference / (1000 * 60));
  const hoursAgo = Math.floor(minutesAgo / 60);
  const daysAgo = Math.floor(hoursAgo / 24);
  const weeksAgo = Math.floor(daysAgo / 7);
  const monthsAgo = Math.floor(daysAgo / 30);

  if (monthsAgo >= 1) {
    return `${monthsAgo} ${monthsAgo === 1 ? "month" : "months"} ago`;
  } else if (weeksAgo >= 1) {
    return `${weeksAgo} ${weeksAgo === 1 ? "week" : "weeks"} ago`;
  } else if (daysAgo >= 1) {
    return `${daysAgo} ${daysAgo === 1 ? "day" : "days"} ago`;
  } else if (hoursAgo >= 1) {
    return `${hoursAgo} ${hoursAgo === 1 ? "hour" : "hours"} ago`;
  } else if (minutesAgo >= 1) {
    return `${minutesAgo} ${minutesAgo === 1 ? "minute" : "minutes"} ago`;
  } else {
    return "just now";
  }
}

const articles: ArticleType[] = [
  {
    title: "How does Crypto-Blender.com work?",
    body: `**Crypto-Blender** is a tool that makes Ethereum (more) **anonymous**. It works pretty straightforwardly. The sender of the payment puts their money into a pool, which then "shuffles" around all the Ethereums and divides them into the recipients\'s addresses based on the amount sent.\n\n**How Crypto-Blender Works in Three Easy Steps**\n\n1. **Enter the Ethereum Address**: Start by entering the Ethereum address (or addresses) where you want to receive the mixed Ethereum. Optionally, you can set a delay for processing your transaction. Remember, the longer the delay, the higher the anonymity of the mixed Ethereum.\n2. **Send Your Ethereum**: Send the Ethereum you want to mix to the address generated by Crypto-Blender.\n3. **Wait for Confirmation**: After the first confirmation of your deposit, Crypto-Blender will initiate the mixing process for your Ethereum. Once completed, they will be sent to the address (or addresses) you provided in the first step.\nThat's it! Crypto-Blender makes it simple to enhance the privacy and security of your Ethereum transactions.`,
    uploadTime: new Date("2023-10-06T12:00:00"),
    readTime: 2,
  },
  {
    title: "But wait... isn't ethereum anonymous?",
    body: `Absolutely not — Ethereum is pseudo-anonymous. **Sending and receiving Ethereum leaves a fingerprint**. If the fingerprint is ever linked to your identity, everything you have ever "touched" will be linked to you.\n\nAll the “fingerprints” are publicly stored in Ethereum's blockchain. Therefore, **anyone you send Ethereum to can look up your previous transactions or even see your crypto balance.**`,
    uploadTime: new Date("2023-10-01T12:00:00"),
    readTime: 1,
  },
  {
    title: "How can a mixer make Etehereum anonymous? CoinJoin is the answer.",
    body: `**CoinJoin is a type of anonymous transaction that helps Ethereum users maintain their privacy while sending Ethereum.** CoinJoin is a multiparty "Ethereum mixing" transaction at the end of which it is unclear who owns which coin.\n\nConsider the following transactions made at the same time: A purchases an item from B, C purchases an item from D, and E purchases an item from F. Without CoinJoin, the public blockchain ledger would record three separate transactions for each input-output match.\n\nWith CoinJoin, only one single transaction is recorded. The ledger would show that Ethereums were paid from A, C, and E addresses to B, D, and F. By masking the deals made by all parties, an observer cannot with full certainty determine who sent Ethereums to whom.\n\nWhile some believe that CoinJoin is a new technology, this is not valid. CoinJoin is simply an advancement on already existing technology - Ethereum. And Ethereum mixers bring CoinJoin technology to users.`,
    uploadTime: new Date("2023-09-29T12:00:00"),
    readTime: 2,
  },
  {
    title: "Why should I choose Crypto-Blender Ethereum Mixer? ",
    body: `<h2 class="text-lg uppercase font-bold">Fast Ethereum mixer</h2>The speed of a Ethereum mixer can be an important consideration for users who want to quickly and efficiently obscure the origin of their Ethereum transactions.\n\n<strong>Crypto-Blender Ethereum mixer offers an instant mixing service, which allows you to receive your mixed Ethereum within a few minutes after the first confirmation of your deposit.</strong>\n\nOptionally, to enhance the privacy of the Ethereum mixing transaction, you can choose a delay in processing your mixing request.\n\n<h2 class="text-lg uppercase font-bold">SECURE ETHEREUM MIXER</h2>The security of a Ethereum mixer can vary depending on the specific service being used. Some Ethereum mixers may have strong security measures in place to protect the privacy of their users, while others may be less secure.\n\nIt is important to carefully research any Ethereum mixer that you are considering using and to ensure that they have strong security measures in place. This can include things like secure servers, encrypted communication, and anonymous registration processes.\n\nTo guarantee the highest level of server and application security at all times, Crypto-Blender employs a team of IT and security specialists. <strong>Additionally, to increase the safety and privacy of our users, we never require or log any personal details, such as name, email, or IP address, and delete all transaction details after 24 hours.</strong>\n\n<h2 class="text-lg uppercase font-bold">CONVENIENT ETHEREUM MIXER</h2>The convenience of a Ethereum mixer can depend on a few factors, such as the user's specific needs and the features and user experience of the mixer service being used.\n\nSome users may find Ethereum mixers to be convenient because they allow them to quickly and easily obscure the origin of their Ethereum transactions. Other users may find Ethereum mixers to be inconvenient because they may have limits on the amount of Ethereum that can be mixed at one time, or because they may require users to go through additional steps to use the service.\n\n<strong>Crypto-Blender Ethereum mixer combines the speed, privacy and affordability, while allowing you to mix up to 450 ETH/WETH in a single transaction, without registration or KYC.</strong>
.`,
    uploadTime: new Date("2023-09-21T12:00:00"),
    readTime: 5,
  },
];
